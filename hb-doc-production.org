#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Document Production Handbook
#+STARTUP: showall
#+PROPERTY: filename collaboration.org
  :PROPERTIES:
  :Name: /home/deerpig/proj/deerpig/deerpig-install/doc-handbook.org
  :Created: 2016-08-28T11:03@Wat Phnom (11.5733N17-104.925295W)
  :ID: 26da5abd-c8a4-4b06-a2da-fef2b748acd0
  :URL:
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org
#+INCLUDE: ./inc/links.org

{{{breadcrumbs}}}


#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4

* Status of This Document

The latest version of this document is: src_sh[:results value]{git describe --abbrev=0 --tags}

#+HTML: <div class="notice notice-info">
*Changes since the last version*

#+HTML: <ul>

#+BEGIN_SRC sh :exports results :results value html :var TAG="v00.01.02"
  RES=`git log $TAG...HEAD --pretty="<li>%s</li>\n" -- hb-doc-production.org`
  if [ -z $RES ]; then
    RES="<li>no changes</li>"
  fi
  echo $RES
#+END_SRC

#+RESULTS:
#+BEGIN_EXPORT html
<li>no changes</li>
#+END_EXPORT

#+HTML: </ul>
#+HTML: </div>

* Introduction

#+begin_quote
This is your last chance. After this, there is no turning
back. You take the blue pill - the story ends, you wake up
in your bed and believe whatever you want to believe. You
take the red pill - you stay in Wonderland and I show you
how deep the rabbit-hole goes.

-- Morpheus,
   [[http://www.imdb.com/title/tt0133093/?ref_=ttqt_qt_tt][The Matrix]] (1999)
#+end_quote

This document (including most of the diagrams) has been
generated using the following tools:

- [[https://www.gnu.org/s/emacs/][GNU Emacs]] | [[https://emacsformacosx.com/][Emacs for MacOS]] | [[https://en.wikipedia.org/wiki/Emacs][Wikipedia]]
- [[http://orgmode.org][Org-mode]]
- [[http://ditaa.sourceforge.net][Ditaa]]
- [[http://graphviz.org][Graphviz]]
- [[http://plantuml.com/][PlantUML]]
- [[http://git-scm.com][Git]] | [[https://en.wikipedia.org/wiki/Git_(software)][Wikipedia]]

This document describes the workflow and toolchain for writing and
maintaining all Chenla & BMF Documentation.  

We will cover how to install software needed to produce and manage
documentation, how documents are structured, edited and built into
either an html web page or pdf document.

* Workflow for document production

This document is also maintained as a =git= repository, which
is tightly bound together with many aspects of the
document.  The workflow is a dance between git and org-mode
that goes something like this:

#+BEGIN_SRC dot :file img/org-git-workflow.png :noweb yes :exports results
digraph h {
  <<dot-style>>
  rankdir=LR; 
  node    [fillcolor="#56B4E9:0.5:#8EC9E9",gradientangle=60,fontcolor="#FFFFFF",shape=oval]
  clone   [label="git\nclone"]
  edit    [label="org\nedit"]
  comit   [label="git\ncomit"]
  deploy  [label="deploy\n.sh"]
  publish [label="org\npublish"]
  jekyll  [label="jekyll\nbuild"]
  push    [label="git\npush"]
  pull    [label="git\npull"]

  clone -> edit ; 
  edit -> comit ;
  comit -> edit ;
  comit -> deploy ;
  pull -> edit ;
  deploy -> edit ;
  deploy -> publish ;
  deploy -> jekyll ;
  jekyll -> push ;
  publish -> push ;
}
#+END_SRC

#+RESULTS:
[[file:img/org-git-workflow.png]]


* Required Packages

** Introduction                                        :ignore:

Org is a plain text markup language.  Any text editor can be used to
edit files.  However, documents will be *far* easier to read if the
editor has syntax highlighting for orgmode files. 

You should already have a working copy of emacs.  

** Linux Installation

It is stronly recommended that you configure and build emacs from the
git repository.  There are a number of external dependencies that
emacs and org need that are not included in the plain vanilla versions
you get from doing a package install using apt-get or yum.

If you are running linux, a good place to start is =here=.

There are also instructions for installing on  =osx= and =windows=.

On Linux systems you can install using =yum= for Red Hat and
kin or =apt-get= for distros descended from Debian.

#+begin_src sh 
sudo apt-get install graphviz ditaa
#+end_src

** OSX Installation

On OSX you can install using homebrew:

#+begin_src sh
  brew update && brew install ditaa graphviz plantuml
#+end_src

** Windoze Installation


* Emacs Config File Setting
** Configuring Orgmode for working with this file

There are two ways to customize emacs and orgmode.  The
first is to use the =emacs-customize= gui.  The other is to
put all changes into a Init file.  See the Emacs manual
(‘C-x r’), node Init File.

 - For GnuEmacs, your init file is named =~/.emacs=,
   =~/.emacs.el=, or =~/.emacs.d/init.el=. You can choose to
   use any of these names. ‘~/’ stands for your home
   directory.
 - For XEmacs, it is named =~/.xemacs= or =~/.xemacs/init.el=.
 - For AquamacsEmacs, it is named =~/.emacs= or
   =~/Library/Preferences/Aquamacs Emacs/Preferences.el=

The Init file is a plain text file that uses =emacs-lisp=
code to change the look, feel or behavior of emacs.

In order to publish this document, you'll need to change
some settings to tell orgmode what languages to use and
where to put things.

Below you will see an explanation of all of these settings,
which have been collected into a file called =org-orgai.el=
which is generated from this section.  To use it, download
the file and save it to either your =.emacs-lisp= or
=.emacs.d= directory where emacs can find it, and add the
following line to your init file:

#+begin_src emacs-lisp
;;; load ORG.AI Orgmode Settings
(load "~/.org-orgai.el")
#+end_src

#+begin_comment 
This section will be a literate program on it's own and be
collected into a file called =org-orgai.el=
#+end_comment


#+begin_src emacs-lisp
;; -*- mode: EMACS-LISP; fill-column: 75; comment-column: 50; -*-
;; Org Mode

#+end_src

** Enable languages

Orgmode's code evaluation is called =Babel=.  In order to
embed code in documents and execute that code have to enable
the languages that will be used.  You can add or delete what
you want.

#+begin_src emacs-lisp
;; Enable language evaluation in Org Babel

(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (ditaa .t)
   (plantuml . t)
   (dot . t)
   (R . t)
   (shell . t)
   (python . t)
   (ruby . t)
   (lisp  . t)
   ))

(setq org-confirm-babel-evaluate nil)
#+end_src

** Link abbreviations

Set up global link abbreviations:

#+begin_src org
 ,[[linkword:tag][description]]
#+end_src

For example:

#+begin_src org
 ,[[bug:22][#22]]
#+end_src

#+begin_src emacs-lisp
;; Abbreviations
  (setq org-link-abbrev-alist
       '(("bug"  . "http://bugs.chenla.org/support/issue")
         ("gh"   . "https://github.com/")
         ("wiki" . "http://en.wikipedia.org/wiki/")
         ("rfc"  . "http://tools.ietf.org/html/")))
#+end_src

** Set up project publishing

#+begin_src emacs-lisp 
(setq org-html-htmlize-output-type 'css)

(require 'ox-publish)
(setq org-publish-project-alist
      '(
	;; CHENLA 
	("chenla-docs"
	 ;; Path to your org files.
	 :base-directory "~/proj/deerpig/deerpig-install/org/"
	 :base-extension "org"
   
	 ;; Path to your Jekyll project.
	 :publishing-directory "~/proj/deerpig/deerpig-install/"
	 :recursive t
	 :publishing-function org-html-publish-to-html
	 :headline-levels 6
	 :html-extension "html"
	 :auto-preamble t ;; Only export section between <body> </body>
	 )
	("chenla" :components ("chenla-docs"))
	
      ))
#+end_src



* Templates
  - Handbook Template
  - Specification Template
  - Manual Template
  - Installation Notes Template
  - Reference Template
* Normative References
* Informative References


* Diagram definitions                                              :noexport:
** Global GraphViz styles

#+BEGIN_SRC dot :noweb-ref dot-style :exports none
  node[style="filled",fontname="Dejavu Sans",fontcolor="black",fontsize=14];
  edge[fontname="Dejavu Sans",fontsize=9];
#+END_SRC
