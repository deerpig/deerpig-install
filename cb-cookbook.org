#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Cookbook
#+STARTUP: showall
#+PROPERTY: filename 
  :PROPERTIES:
  :Name: /home/deerpig/proj/deerpig/deerpig-install/cb-cookbook.org
  :Created: 2016-09-03T16:29@Wat Phnom (11.5733N17-104.925295W)
  :ID: b1da031d-42cf-4a53-8ae9-9b45875773e2
  :URL:
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4


* Status of This Document

The latest version of this document is: src_sh[:results value]{git describe --abbrev=0 --tags}

#+HTML: <div class="notice notice-info">
*Changes since the last version*

#+HTML: <ul>

#+BEGIN_SRC sh :exports results :results value html :var TAG="v00.01.02"
  RES=`git log $TAG...HEAD --pretty="<li>%s</li>\n" -- cb-cookbook.org`
  if [ -z $RES ]; then
    RES="<li>no changes</li>"
  fi
  echo $RES
#+END_SRC

#+RESULTS:
#+BEGIN_EXPORT html
<li>no changes</li>
#+END_EXPORT

#+HTML: </ul>
#+HTML: </div>

* Introduction

Our first cookbook.  I have a lot of snippets squirelled away
in my notes, but I've never collected or organized them into
one place.  /THIS IS THAT PLACE/.

This will eventually get split into different files.

* BASH

** USB Drive read-only file-system

#+begin_src sh
sudo mount -o remount,rw '/media/deerpig/disk-label'
#+end_src

** Create Multiple Nested Directories

This is a good example of [[http://wiki.bash-hackers.org/syntax/expansion/brace][Brace Expansion]].

#+begin_src sh
mkdir -p a/b/c
mkdir -p a/{b1,b2}/c
mkdir -p a/b{1,2}/c
mkdir -p a/b{1,2,3/c{1,2}}/d
mkdir -p doc/{text/,img/{wallpaper/,photos/}}
#+end_src

* Emacs 
* Org Mode

** Ignore headings

I first read about excluding headings [[http://www.clarkdonley.com/blog/2015-08-30-org-mode-and-writing-papers-selective-export-tips.html][from this post ]]but it didn't
work for me.  But [[http://emacs.stackexchange.com/questions/9492/is-it-possible-to-export-content-of-subtrees-without-their-headings/17677#17677][this question]] on stack overflow showed me the path
to ignoring bliss!

Add the following to your .emacs file:

#+begin_src emacs-lisp
    (require 'ox-extra)
    (ox-extras-activate '(ignore-headlines))
#+end_src

Use the ignore :tag: on headlines you'd like to have ignored
(while not ignoring their content)
** Escaping Org Examples in Org

*NOTE:* This is not working -- not sure what's happening.


#+BEGIN_SRC ascii
 #+BEGIN_SRC org
   #+BEGIN_SRC org
   * A heading
   ** Subhead
      With a bunch of other stuff
   #+END_SRC
 #+END_SRC
#+END_SRC

  - Wrap the example in a =#+BEGIN_SRC= org
  - Wrap that in a =#+BEGIN_SRC= org
  - Escape each line with a , so it won't be processed by
    org.

Source: [[http://irreal.org/blog/?p=5503][Irreal: Escaping Org Examples in Org]]

* BibTex
** BibTex format for citing articles

#+begin_src bibtex
  @misc{nameYEARtitle,
    author       = {},
    title        = {{Page Title --- Site Name},
    year         = {},
    howpublished = {\url{http://}},
    note         = {Accessed: 2016-08-01}
#+end_src
* Chef
** Kitchen

Kitchen is typically used with a VM, be sure that
virtualization is turned on in the bios, or 64bit OSs will
likely not run...

  - mkdir project
  - cd project
  - kitchen init --create-gemfile  
    
    The "--create-gemfile" is required otherwise it will try
    to install system-wide gems instead of local ones and
    you'll get an error.

 - bundle install

 - kitchen list   #see if it's all there
 - emacs -nw .kitchen.yml

   at minimum edit the platforms.

 - kitchen create

   downloads bundleboxes for each platform listed in .kitchen.yml

 - kitchen login
 - kitchen setup

   installs chef client on VM

 - exit
 - kitchen destroy

** Chef generate cookbook

Use chef generate to create a cookbook.

  - chef generate cookbook <cookbook>

  - cd <cookbook>
  - emacs -nw .kitchen.yml
  - kitchen list

And all should be good.

** Knife
Use knife to create cookbooks

  - knife cookbook create <name> --cookbook-path .

  - cd <name>
  - kitchen init --create-gemfile
  - bundle install

  - emacs -nw .kitchen.yml
  - kitchen list

And all should be good.

** Chef Run
Create your recipes

 - kitchen converge default-debian-83

** CentoOS Bento

After a day and a half of banging my head against the table
at Bayon yesterday, I was finally able to get CentOS to work
with VirtualBox, Vagrant and Chef.  Here's how:

  - edit .kitchen.yml
  - kitchen create default-centos-72

    This will download the image, but when it tries to boot
    it replaces an /insecure key/ with a more secure key
    which doesn't exist and then goes into a loop trying to
    connect but not authenticating.  Not good.

    When it finally gives up:

  - kitchen destroy default-centos-72

    Now edit the Vagrant file in ~/.vagrant.d/boxes/bento-....

    so it looks like this:

#+begin_src ruby
Vagrant.configure("2") do |config|
  config.vm.base_mac = "080027B1F844"
  config.ssh.insert_key = false
end
#+end_src

  - kitchen create default-centos-72
  - kitchen list

    should show that it's been created.

  - kitchen login

This is a work around for doing local chef cookbook
development -- it is insecure and MUST NOT be used in a
production environent.

** Bento
Default boxes are published under the Bento organization on
[[https://atlas.hashicorp.com/bento][Atlas]] such as:

#+begin_src yml
---
platforms:
  - name: ubuntu-12.04
  - name: ubuntu-14.04
  - name: centos-5.11
  - name: centos-6.7
  - name: centos-7.2
  - name: debian-7.9
  - name: debian-8.3
  - name: fedora-22
  - name: fedora-23
  - name: freebsd-9.3
  - name: freebsd-10.2
#+end_src

:url: https://atlas.hashicorp.com/bento

** cli ascii pack cookbook

The goal is to turn this section into a cookbook

  - install figlet toilet toilet-fonts cowsay fortune
  - download fonts
  - unzip them
  - install in /usr/share/figlet
  - test

#+begin_src sh
sudo apt-get install figlet toilet toilet-fonts cowsay \
fortune cmatrix libaa-bin 
#+end_src

Font directory: /usr/share/figlet


*** Links
  - [[http://www.jave.de/figlet/fonts.html][figlet font library]]
  - [[https://www.linux.com/learn/linux-tips-fun-figlet-and-toilet-commands][Fun with figlet and toilet commands]] 
  - [[http://www.cyberciti.biz/faq/create-large-colorful-text-banner-on-screen/][Linux: Display Large Colourful Text Banner On Screen]]
