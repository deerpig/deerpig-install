#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Bunsen Labs Linux Install Guide
#+AUTHOR: Brad Collins <brad@chenla.la>
#+DATE: 
#+STARTUP: showall
#+INFOJS_OPT: view:info toc:t ltoc:t
#+HTML_HEAD_EXTRA: <style>body {margin-left:50px; width:60%;}</style>
  :PROPERTIES:
  :Name: /home/deerpig/org/bunsen-install.org
  :Created: 2016-06-13T12:52@Wat Phnom (11.5733N17-104.925295W)
  :ID: 238cc479-376a-4040-9e06-750faf722dc7
  :URL:
  :END:

I've refined this guide over six clean installs on laptop
and desktop boxes.  It's still a work in progress, but it's
getting to the point where it's reasonably stable.

Set aside at least half a day to complete the basics -- a
lot of this is just the time to download and install stuff.
After the basic install and update you'll be installing
several gig of files.  And let's not forget it takes the
better part of an hour to config, make and make install
emacs.

** Bunsen Install

Do generic install from Live USB, when you reboot you'll get
an install script -- don't install everything they suggest.
Tried that once and it screwed things up, but use it to do
an apt-get update, upgrade and add the alternate repos they
suggest.

** Install Some Tools
#+begin_src sh
sudo apt-get install wget surfraw openssh-server gdebi most xprintidle lxrandr
#+end_src

** Install Graph Generators for Org Mode

Install Ditaa, PlantUML and GraphViz which are used by Orgmode

#+begin_src sh
sudo apt-get install ditaa graphviz
#+end_src

Download the PlantUML jar file from:

  :url: http://sourceforge.net/projects/plantuml/files/plantuml.jar/download

And then copy it to a place that can be used system-wide:

#+begin_src  sh
cd ~/Downloads
sudo cp ./plantuml.jar /usr/local/bin/
#+end_src

** Install Git

Install Git:

#+begin_src  sh
sudo apt-get install git-core
#+end_src

** Install Emacs

Install graphics and dev libs:

#+begin_src sh
sudo apt-get install libxaw7-dev libxpm-dev libpng12-dev libtiff5-dev libgif-dev libjpeg62-turbo-dev libgtk2.0-dev libncurses5-dev libxml2 libxml2-dev
#+end_src

Full install of texinfo, latex & tex and pandoc.  Texinfo is
needed by emacs, this will also install pdflatex which is
also needed by orgmode.

This will take a while -- well over a gigabyte

#+begin_src sh
sudo apt-get install texinfo texlive-base texlive-bibtex-extra pandoc
sudo apt-get install texlive-fonts-recommended texlive-fonts-extra
sudo apt-get install texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-science
#+end_src
  
Install GNU-Autotools

#+begin_src sh
sudo apt-get install autoconf automake
#+end_src

Install the dependencies specified on the emacs package

#+begin_src sh
sudo apt-get build-dep emacs
#+end_src

Download Emacs source code from Github.  Be sure to pass the "--depth
1" flag to download just the more recent history of the files.

#+begin_src sh
git clone --depth 1 https://github.com/emacs-mirror/emacs.git
cd emacs
#+end_src

Run the autogen and configure scripts. Note that with
"--prefix" you pass the path in which you'll want the files to be
installed.

#+begin_src sh
./autogen.sh
./configure
make
#+end_src

Make install as root

#+begin_src sh
sudo make install
#+end_src

** Install Conkeror Web Browser

#+begin_src sh
sudo apt-get install conkeror conkeror-spawn-process-helper
#+end_src

XULRunner has been booted out by Mozilla, so we need to use Firefox
instead. 

#+begin_src sh
emacs ~/.bashrc_aliases
#+end_src

And add:

#+begin_ascii
alias conkeror='firefox -app /usr/share/conkeror/application.ini'
#+end_ascii
  
** Install some Graphics Apps

Install Gimp Inkscape Blender & Viewnior

#+begin_src sh
sudo apt-get install gimp inkscape blender viewnior scribus
#+end_src


** Install some KDE Apps

krusader, kcolorchooser (part of kdegraphics), sane
& calibre

#+begin_src sh
sudo apt-get install krusader kdegraphics sane
#+end_src

** Install PDF/Ebook Apps

#+begin_src sh
sudo apt-get install okular calibre djview4
#+end_src

** Install media Apps

VLC is already installed, so install audacious for light
weight, music playing and clementine for my 2TB collection.

#+begin_src sh
sudo apt-get install clementine audacious
#+end_src


** Install Viber Desktop

Install dependencies:

#+begin_src sh
sudo apt-get install libqt5gui5
#+end_src

Go to:

  https://www.viber.com/en/products/linux

Click on "Viber Debian (64 bit) and save.

#+begin_src sh
sudo gdebi ~/Downloads/viber.deb
#+end_src

Now fix the weird path:

#+begin_src sh
ln -s /opt/viber/Viber /usr/local/bin/viber
#+end_src

Change the Exec & Path as:

#+begin_src sh
sudo emacs /usr/share/applications/viber.desktop
#+end_src

Change the following:

#+begin_ascii
  Exec=viber
  Path=/opt/viber
#+end_ascii

When you open the app for the first time it will ask you for a
telephone number and then a code that will be sent your phone.

Fucking awful GUI....
** Install Skype

The Skype client was suffering from serious bit rot.
Thankfully MS has finally decide to port the latest version
of Skype to Linux.  It's an alpha release (sigh) but
sometimes you gotta take what you can get...

Download and install the .deb file:

:url: https://community.skype.com/t5/Linux/bd-p/Linux

** Install Google Chrome

 Use iceweasel, not Conkeror to open:

 http://www.google.com/chrome/browser/desktop/index.html 

and follow instructions.

 Run on the command line:

 google-chrome

** Add DuckDuck Go As Default

 - Iceweasel: install Firefox DuckDuckGo Addon
 - Chrome: go to https://www.duckduckgo.com 
   right click on url, choose edit search engines
   click to make DuckDuckGo the default.

Make sure both Chrome & Iceweasel are set to restore tabs and settings
when starting up.

 
** Install Jekyll

#+begin_src sh
sudo apt-get install ruby ruby-dev rubygems
sudo gem install jekyll
#+end_src

Then follow the guide in [[./jekyll-new-site.org]]

** Set Wallpaper

In the menu find 'choose wallpaper'  and add the following
path:

  /usr/share/images/bunsen/wallpapers/default/

** Turn off screen lock

Turning off the screen lock in the Power Management app
doesn't work.  Screen blanking is controlled by X but the
screen lock is controlled by light-locker.

To disable the lock:

#+begin_src  sh
sudo emacs /etc/xdg/autostart/light-locker.desktop
#+end_src

and add the following:

#+begin_ascii
Exec=light-locker --lock-after-screensaver 0
#+end_ascii

`0' disables locking.

** Possible Org-Mode Problems

The version of orgmode is downloaded via git.  I was
recently having a problem with timezones...

If something doesn't work, redownload and install clearn
version:

#+begin_src sh
cd ~/emacs-lisp
mv -R ./org-mode ./org-mode.bak./orf
git clone git://orgmode.org/org-mode.git
cd ./org-mode
make autoloads
#+end_src

** Get SSH working

#+begin_src sh
cd ~
mkdir .ssh
chmod 700 ./.ssh
chmod 600 ./id_rsa
chmod 644 ./.ssh/authorized_keys
#+end_src

** Getting ssh-agent to work properly

If you use git many times a day as I now do it's a major
pain in the pass to have to keep entering your fucking ssh
passphrase.  It's easy to run ssh agent so the problem goes
away when using Bash but X11 keeps autostarting it when you
use Magit in Emacs.  Enough was enough.

You should have the following script in your .bashrc (or
possibly .bash_profile to autostart ssh-agent when you
start a bash-shell.

#+begin_src sh
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent> /dev/null || {
        start_agent;
    }
else
    start_agent;
fi
#+end_src


Next install `exec-path-from-shell' from MELPA and add the
following in your .emacs.  I put it just above the settings
for Magit.

#+begin_src 
(require 'exec-path-from-shell)
(exec-path-from-shell-copy-env "SSH_AGENT_PID")
(exec-path-from-shell-copy-env "SSH_AUTH_SOCK")
#+end_src

To get magit in emacs to stop prompting for the passphrase:

#+begin_src sh 
sudo emacs /etc/X11/Xsession.options
#+end_src

And comment out `ssh-agent' so X11 doesn't start it
automatically when magit pushes.

#+begin_src sh
sudo emacs -nw  gnome-keyring-ssh.desktop 
#+end_src

and comment out:

#+begin_ascii
Exec=/usr/bin/gnome-keyring-daemon --start --components=ssh
#+end_ascii


try running the following:

#+begin_src sh
xfconf-query -c xfce-session -p /startup/ssh-agent/enabled -n -t bool -s false
#+end_src

You may have to log out or reboot for all the settings to work.

** Copy dotfiles and emacs stuff

I keep most of my config files in a directory called
".dotfiles" and then create symbolic links to "~/".  The
diectory is a git repo that I then use to sync between
five different machines.

#+begin_src sh
git clone deerpig@dev.chenla.org:/~repos/dotfiles
mv ~/dotfiles ~/.dotfiles
cd .dotfiles
#+end_src

Now remove the originals and link all the files in .files to
~/.

#+begin_src sh
cd ~/
ls ~/.dotfiles
rm <filename>
ln -s .dotfiles<filename> .<filename>
#+end_src

** Install fetchmail

#+begin_src sh
sudo apt-get install fetchmail procmail
#+end_src

You should already have linked your fetchmailrc from
.dotfiles now check the permissions

#+begin_src sh
chmod 600 ~/.fetchmailrc
#+end_src

Set the daemon

#+begin_src sh
sudo emacs /etc/default/fetchmail
#+end_src

change to START_DAEMON=yes

** Install ssmtp

#+begin_src sh
sudo apt-get install ssmtp mailutils
#+end_src

Copy the ssmpt-conf file into place, or edit the default
config file to work like so

/etc/ssmtp/ssmtp-conf

#+begin_src sh
root=brad@chenla.la
mailhub=smtp.gmail.com:587
RewriteDomain=chenla.la
FromLineOverride=YES
UseSTARTTLS=YES
TLS_CA_File=/etc/pki/tls/certs/ca-bundle.crt
AuthUser=brad@chenla.la
AuthPass=your-password
#+end_src

/etc/ssmtp/revaliases

#+begin_src sh
root:username@gmail.com:smtp.gmail.com:587
mainuser:username@gmail.com:smtp.gmail.com:587
#+end_src

#+begin_src sh
chmod 640 /etc/ssmtp/ssmtp-conf
#+end_src

Now this is where things get weird -- it won't work.

This is the workaround:

Install postfix, which uninstalls ssmtp and mailutils

then uninstall postfix and reinstall ssmtp and mailutils

it should now work....  postfix sets up a lot of little
stuff during the install, but leaves some in place when you
uninstall that ssmtp seems to need to work.


** Edit OpenBox RC Files

I had tried to put all the OpenBox config files in a Git
repo -- but there are a number of variations required
between different hardware configs -- and BL is under active
development, so I've broken things by importing OpenBox
scripts that were only a week old!  So until BL has made a
first release, it's better to install whatever is the new
default and tweak it to taste.

:NOTE: Needs to be expanded.

- autostart 
  - set up screen resolution
  - disable caps-lock key
- rc.xml
  - number of desktops & default desktop
  - edit keyboard shortcuts to open apps
  - edit menus
- menus.xml
- pipemenus

** Get Rid of the App Launcher

Open

#+begin_src sh
emacs ~/.config/tint2/tint2rc
#+end_src
  
and comment out all of the 'launcher_item_app' entries.


** Set up Colors & Themes 
 - set colors and fonts in Terminal app
 - obconf

** Add User to Wheel Group

It seems that BunsenLabs install scripts and kde sudo (used
by at least one gui package manager) require users to be in
the wheel group so....

#+begin_src sh
sudo groupadd wheel
sudo gpasswd -a deerpig wheel
#+end_src
