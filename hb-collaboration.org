#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Collaboration Handbook
#+STARTUP: showall
#+PROPERTY: filename collaboration.org
  :PROPERTIES:
  :Name: /home/deerpig/proj/deerpig/deerpig-install/collaboration.org
  :Created: 2016-08-27T16:28@Wat Phnom (11.5733N17-104.925295W)
  :ID: bc0f8937-4fad-46d8-ac00-eec13f7a5962
  :URL:
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org
#+INCLUDE: ./inc/links.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 6

* Status of This Document

The latest version of this document is: src_sh[:results value]{git describe --abbrev=0 --tags}

#+HTML: <div class="notice notice-info">
*Changes since the last version*

#+HTML: <ul>

#+BEGIN_SRC sh :exports results :results value html :var TAG="v00.01.02"
  RES=`git log $TAG...HEAD --pretty="<li>%s</li>\n" -- hb-collaboration.org`
  if [ -z $RES ]; then
    RES="<li>no changes</li>"
  fi
  echo $RES
#+END_SRC

#+RESULTS:
#+BEGIN_EXPORT html
<li>no changes</li>
#+END_EXPORT

#+HTML: </ul>
#+HTML: </div>

* Introduction

This will be the /Chenla Collaboration Team Handbook/



* Introduction

Chenla Documentation is structured in a simular way that Org's
=Worg=.  All documentation is written in =literate orgmode= and
maintained in a Git repository on the team =gitolite= server.  But it
is also mirrored in a public repo on [[gh:deerpig][GitHub]].  The website, code and
documention for the project is generated from this repo and deployed
on the project web server.  Anyone can clone a copy of the repo, make
changes and contributions and then put in a pull request to have them
integrated into the main trunk.

Git version control is obviously an important part of this process,
but Git is not a very good way of multiple people editing the same
text.  But this we use CriticMarkup.  If you edit an existing piece of
text, use CriticMarkup using =cm-mode= in emacs or criticmarkup support
in a number of other editors and then commit the the marked up file to
be reviewed and the changes intregrated into the site.

* Chelpa: Chenla Elpa Mirror Repository

To keep everyone's emacs in sync, so that there are no problems with
deployment, or with dependencies, we run our own Elpa Mirror =CHELPA=.

 https://github.com/redguardtoo/elpa-mirror

* UsePackage

The team maintains an init file named =.emacs-chenla= that includes
usepackage statements that point to all of the packages that are
needed to create, build and export.

* GitoLite
* Git
* Magit


* Issue Tracker

Chenla uses the Roundup Issue Tracker.  Roundup is not as
feature bloated as the big name trackers like Jira and
BugZilla, but that's the whole point.  Jira is overkill for
a small project with only a small number of developers.
Roundup also has a very nice email interface for creating
issues, discussing and changing the status or priority of
issues.

The chenla issue tracker is located at:
[[http://bugs.chenla.org/support/]] (roundup requires the
trailing /).

** Issue Numbers

The Issue tracker expects issue numbers to be written in the
format [IssueXX] with XX being the issue number, this is
used both in the tracker email interface and in the url for
each issue.

** Status

- unread ::

- deferred :: 

- chatting ::

- need-eg :: /need example/ ("eg" is derived from "e.g.")
  Useful if the developers can't reproduce a bug and need
  instructions how to do this or an example document showing the
  bug. [1]

- in-progress :: 

- testing :: 

- done-cbb :: /done, could be better/
  It is kind of resolved, but the solution isn't very nice or
  efficient.[1]

- resolved ::


[1] See: https://sourceforge.net/p/roundup/mailman/message/12295746/

** Priority

- critical :: This is a priority #A issue that needs that
     *MUST* be addressed /immediately/.  This is a "get out
     of bed!  The house is on fire!" kind of situation.  If
     this was set by someone other than a project lead, or
     someone higher, it needs to be reviewed immediately and
     action taken.

- urgent :: This is a priority #B issue that may not be an
     immediate emergancy, but *SHOULD* be reviewed and
     resolved as soon as possible.

- bug :: A non-crtical or urgent bug, that should be fixed
     in the next release.

- feature ::  This is a new feature that has been accepted
     for inclusion in the project, which needs to be added
     to the /backlog/.

- wish ::  This is a feature /request/ from a user or
     someone on the project, that needs to be discussed.  If
     accepted it will then be upgraded to a /feature/.


** Mail Interface

* Critic Markup

http://criticmarkup.com/

** Install CriticMarkup Mode

#+begin_src emacs-lisp
(use-package cm-mode
  :ensure t
  :pin chelpa)
#+end_src

** Markup

- Addition ={++ ++}=
- Deletion ={-- --}=
- Substitution ={~~ ~> ~~}=
- Comment ={>> <<}=
- Highlight ={== ==}{>> <<}=

** Key bindings

  | key-binging | description                             |
  |-------------+-----------------------------------------|
  | C-c * a     | add text                                |
  | C-c * d     | delete text                             |
  | C-c * s     | make a substitution                     |
  | C-c * c     | add a comment                           |
  | C-c * i     | accept/reject change at point           |
  | C-c * I     | accept/reject all changes interactively |
  | C-c * *     | move forward out of a change            |
  | C-c * f     | move forward to the next change         |
  | C-c * b     | move backward to the previous change    |
  | C-c * C     | set author                              |
  | C-c * F     | activate follow changes mode            |
  


