#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Collaboration Handbook
#+STARTUP: showall
#+PROPERTY: filename collaboration.org
  :PROPERTIES:
  :Name: /home/deerpig/proj/deerpig/deerpig-install/collaboration.org
  :Created: 2016-08-27T16:28@Wat Phnom (11.5733N17-104.925295W)
  :ID: bc0f8937-4fad-46d8-ac00-eec13f7a5962
  :URL:
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org
#+INCLUDE: ./inc/links.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 6

* Status of This Document

The latest version of this document is: src_sh[:results value]{git describe --abbrev=0 --tags}

#+HTML: <div class="notice notice-info">
*Changes since the last version*

#+HTML: <ul>

#+BEGIN_SRC sh :exports results :results value html :var TAG="v00.01.02"
  RES=`git log $TAG...HEAD --pretty="<li>%s</li>\n" -- hb-collaboration.org`
  if [ -z $RES ]; then
    RES="<li>no changes</li>"
  fi
  echo $RES
#+END_SRC

#+RESULTS:
#+BEGIN_EXPORT html
<li>no changes</li>
#+END_EXPORT

#+HTML: </ul>
#+HTML: </div>

* Introduction

This will be the /Chenla Collaboration Team Handbook/

For now, all of the material that will eventually become the chenla
team handbook, and all of the workflow & toolchain material will go
into this file until there is enough material to break into separate
files.

* Collaboration

** Introduction

Chenla Documentation is structured in a simular way that Org's
=Worg=.  All documentation is written in =literate orgmode= and
maintained in a Git repository on the team =gitolite= server.  But it
is also mirrored in a public repo on [[gh:deerpig][GitHub]].  The website, code and
documention for the project is generated from this repo and deployed
on the project web server.  Anyone can clone a copy of the repo, make
changes and contributions and then put in a pull request to have them
integrated into the main trunk.

Git version control is obviously an important part of this process,
but Git is not a very good way of multiple people editing the same
text.  But this we use CriticMarkup.  If you edit an existing piece of
text, use CriticMarkup using =cm-mode= in emacs or criticmarkup support
in a number of other editors and then commit the the marked up file to
be reviewed and the changes intregrated into the site.

** Chelpa: Chenla Elpa Mirror Repository

To keep everyone's emacs in sync, so that there are no problems with
deployment, or with dependencies, we run our own Elpa Mirror =CHELPA=.

 https://github.com/redguardtoo/elpa-mirror

** UsePackage

The team maintains an init file named =.emacs-chenla= that includes
usepackage statements that point to all of the packages that are
needed to create, build and export.

** GitoLite
** Git
** Magit
** Critic Markup

http://criticmarkup.com/

*** Install CriticMarkup Mode

#+begin_src emacs-lisp
(use-package cm-mode
  :ensure t
  :pin chelpa)
#+end_src

*** Markup

- Addition ={++ ++}=
- Deletion ={-- --}=
- Substitution ={~~ ~> ~~}=
- Comment ={>> <<}=
- Highlight ={== ==}{>> <<}=

*** Key bindings

  | key-binging | description                             |
  |-------------+-----------------------------------------|
  | C-c * a     | add text                                |
  | C-c * d     | delete text                             |
  | C-c * s     | make a substitution                     |
  | C-c * c     | add a comment                           |
  | C-c * i     | accept/reject change at point           |
  | C-c * I     | accept/reject all changes interactively |
  | C-c * *     | move forward out of a change            |
  | C-c * f     | move forward to the next change         |
  | C-c * b     | move backward to the previous change    |
  | C-c * C     | set author                              |
  | C-c * F     | activate follow changes mode            |
  

* Style Guides

Typographic, colors and layout

** Colors in Charts, Graphs & Diagrams

Define color palettes for graphic materials

We want to ensure that colors used across the project are:

  - consistent :: provides a uniform color scheme
  - aesthetic  :: is pleasant to look at -- good design
  - informative :: uses color to convey meaning
  - color-blind friendly :: 

*** Color-blind friendly colors

These are both /very/ good links that will give you more
information about thinking about color schemes than you will
/ever/ want to know.

- http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
- http://jfly.iam.u-tokyo.ac.jp/color/


*** Informative References

- http://www.perceptualedge.com/articles/visual_business_intelligence/rules_for_using_color.pdf
- http://www.ibm.com/developerworks/data/library/cognos/infrastructure/cognos_specific/page571.html

** Display of text

 - Headings

 - links
 - visited links
 - hover
 - mouse-over

 - keyboard
 - example

 - warning text
 - comment text
 - informative notes

** Font families

Quote from Beatrice... 

  - /monospace fonts/ for text screen displays
  - /proportional fonts/ for web and print


